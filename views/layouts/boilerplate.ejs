<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NUS Assistant</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet">
    <link href="../../bootstrap/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="container-fluid d-flex flex-column vh-100 p-0">
    <%- include('../partials/navbar')%>
    <div class="row">
        <div class="col-2 p-0">
            <%- include('../partials/sidebar')%>
        </div>
        <div class="col-10 p-0">
            <%- body %>
        </div>
    </div>
    
    
    <%- include('../partials/footer')%>


    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>
    <script src="../../bootstrap/js/bootstrap.bundle.min.js"></script>

    <script type="text/javascript">
        const dateRegex = new RegExp('^\\d\\d\\d\\d-\\d\\d-\\d\\d');
        async function graphQLFetch(query, variables = {}) {
            try {
                const response = await fetch('http://localhost:8080/graphql', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json'},
                    withCredentials: true,
                    body: JSON.stringify({ query, variables })
                });
                const body = await response.text();

                const result = JSON.parse(body, jsonDateReviver);
  
                if (result.errors) {
                    const error = result.errors[0];
                    if (error.extensions.code == 'BAD_USER_INPUT') {
                        const details = error.extensions.exception.errors.join('\n ');
                        alert(`${error.message}:\n ${details}`);
                    } else {
                        alert(`${error.extensions.code}: ${error.message}`);
                    }
                }
                return result.data;
                } catch (e) {
                alert(`Error in sending data to server: ${e.message}`);
                }
            }

            function jsonDateReviver(key, value) {
                if (dateRegex.test(value)) return new Date(value);
                return value;
            }

    </script>
</body>
</html>