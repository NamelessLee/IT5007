<% layout('layouts/boilerplate') %>
<!DOCTYPE html>
<html>
    <head lang="en">
        <meta charset="UTF-8">
        <style>
            .myNavi {
                display: block;
                color: #666;
                text-align: center;
                padding: 14px 16px;
                text-decoration: none;
            }
            
            .myNavi:hover:not(.active) {
              background-color: #ddd;
            }
            
            .active {
              color: white;
              background-color:peachpuff;
            }
            #sidebarAdmin {
                background-color: chocolate;
            }
            </style>
    </head>
    <body>
      <div id="noneAdminPage" style="display: none">
        <br></br>
        <h1 style="text-align: center">Sorry. Only Admin can access this page.</h1>
        <p style="text-align: center">Email</p>
        <p style="text-align: center">e0809389@u.nus.edu Or lang.qianqian@u.nus.edu</p>
        <p style="text-align: center">for authority</p>
        
      </div>
      <div id="adminPage" style="display: block;"> 
        <div class="container-fluid" style="background-color: aliceblue;">
            <h1 style="text-align: center;">Administration Sector </h1>
        </div>
        <div>
            <ul style="list-style-type: none;margin: 0;padding: 0;overflow: hidden;border: 1px solid #e7e7e7;background-color: #f3f3f3;">
                <li style="float: left;"><a style="display: block; color: #666; text-align: center; padding: 14px 16px; text-decoration: none;"class="active" href="#userm">User Management</a></li>
                <li style="float: left;"><a style="display: block; color: #666; text-align: center; padding: 14px 16px; text-decoration: none;" class="myNavi" href="#rrm">Region Risk Management</a></li>
                <li style="float: left;"><a style="display: block; color: #666; text-align: center; padding: 14px 16px; text-decoration: none;" class="myNavi" href="#ccm">Close Contact Management</a></li>
                <li style="float: left;"><a style="display: block; color: #666; text-align: center; padding: 14px 16px; text-decoration: none;" class="myNavi" href="#bm">Building Management</a></li>
                <li style="float: left;"><a style="display: block; color: #666; text-align: center; padding: 14px 16px; text-decoration: none;" class="myNavi" href="#tm">Tutor Management</a></li>
                <li style="float: left;"><a style="display: block; color: #666; text-align: center; padding: 14px 16px; text-decoration: none;" class="myNavi" href="#bltm">Bulletin Management</a></li>
              </ul>
        </div>
        <div style="background-color: peachpuff;">
            <h3 style="text-align: center;">User Info</h3>
            <div class="btn-group" style="margin-left: 20px;">
                <button type="button" class="btn btn-outline-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                  Symptoms
                </button>
                <ul class="dropdown-menu" style="padding-left: 10px;">
                  <li>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                        <label class="form-check-label" for="flexCheckDefault">
                          Fever
                        </label>
                      </div>
                  </li>
                  <li>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="cough">
                        <label class="form-check-label" for="cough">
                          Cough
                        </label>
                      </div>
                  </li>
                  <li>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="cough">
                        <label class="form-check-label" for="cough">
                          Sneeze
                        </label>
                      </div>
                  </li>
                  <li>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="cough">
                        <label class="form-check-label" for="cough">
                          Headache
                        </label>
                      </div>  
                  </li>
                  <li>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="cough">
                        <label class="form-check-label" for="cough">
                          Dizzy
                        </label>
                      </div>
                  </li>
                  <li>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="breath">
                        <label class="form-check-label" for="breath">
                          Short of breath
                        </label>
                      </div>
                  </li>
                  <li>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="chest">
                        <label class="form-check-label" for="chest">
                          Persistent pain in the chest
                        </label>
                      </div>
                  </li>
                  <li>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="noSymptom" checked>
                        <label class="form-check-label" for="noSymptom">
                          No symptom
                        </label>
                      </div>
                  </li>
                </ul>
              </div>

              <div class="form-check form-check-inline" style="margin-left: 20px; ">
                <input class="form-check-input" type="checkbox" value="" id="closeContactCheck">
                <label class="form-check-label" for="closeContactCheck">
                  Close Contact
                </label>
              </div>

              <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" value="" id="tutorCheck">
                <label class="form-check-label" for="tutorCheck">
                  Tutor
                </label>
              </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">UserID</th>
                        <th scope="col">UserName</th>
                        <th scope="col">UserStatus</th>
                        <th scope="col">UserClass</th>
                        <th scope="col">UserTrace</th>
                        <th scope="col">UserPassword</th>
                        <th scope="col">Delete</th>
                    </tr>
                </thead>
                <tbody id="UserTable">
                    
                </tbody>
            </table> 
        </div>
       </div> 
        <script>
          window.addEventListener('load', loadHandler);

          async function loadHandler(){
            var type = sessionStorage.getItem('type');
            if(type.indexOf('admin') == -1){//not admin
              document.getElementById("adminPage").style.display = "none";
              document.getElementById("noneAdminPage").style.display = "block";
            }
            const query = `query {
              AllUsers{
                username
                password
                name
                type
                dorm
                courses
              }
            }`;//no ()
            const data = await graphQLFetch(query);
            //console.log("data="+JSON.stringify(data));
            var str = '';
            console.log(data);
            console.log(data.AllUsers.length);
            for(let i=0; i<data.AllUsers.length; i++){
              let username = data.AllUsers[i].username;
              const query = `query {
                  Health(username: "${username}")
                  {
                      status
                  }
              }`;
              var data1 = await graphQLFetch(query, {username});
              var status = '404';
              if(data1.Health != null){
                status = data1.Health.status;
              }
    
              str += '<td>' + data.AllUsers[i].username + '</td>' + '<td>' + data.AllUsers[i].name + '</td>' + '<td>' + status + '</td>' + '<td><button onClick="handleViewModules(\''+data.AllUsers[i].username+'\')" style="background-color:orange; border-radius: 10px;">view modules</button></td>'
                        + '<td><button onClick="handleViewTrace(\''+data.AllUsers[i].username+'\')" style="background-color:orange; border-radius: 10px;">view trace</button></td>'
                        + '<td><button onClick="handleViewPWD(\''+ data.AllUsers[i].password+'\')" style="background-color:orange; border-radius: 10px;">view password</button></td>'
                        + '<td><button onClick="handleDelete(\''+data.AllUsers[i].username+'\')" style="background-color:orangered; border-radius: 10px;">Delete</button></td>';
              str += '</tr>';
              
            }
            document.getElementById("UserTable").innerHTML = str;
          }

          async function handleDelete(username){
            const query = `mutation {
                UserDelete(username: "${username}")
            }`;
            const data = await graphQLFetch(query, { username });
            if(data.UserDelete != 1){
              alert("Failed to delete. Please retry.")
            }
            else {
              alert("Successfully deleted user: " + username);
              loadHandler();
            }
          }

          async function handleViewModules(username){
            const query = `query {
              AllUsers{
                username
                name
                courses
              }
            }`;//no ()
            const data = await graphQLFetch(query);
            console.log(data);
            var AllUsers = data.AllUsers;
            var modules = [];
            var name = '';
            for(let i = 0; i < AllUsers.length; i++){
              if(AllUsers[i].username == username){
                modules = AllUsers[i].courses;
                name = AllUsers[i].name;
              }
            }
            alert("Modules " + name + " takes are:" + "\n" + modules);
          }

          async function handleViewPWD(password){
            alert('password:' + password);
          }

          async function handleViewTrace(username){
            const query = `query {
                Entry(username: "${username}")
                {
                    Datetime
                    type
                    fromwhere
                    residence
                    placesPassed
                }
            }`;
            const data = await graphQLFetch(query, { username });
            var traces = '';
            if(data.Entry.length != 0){
              traces += username + '\'s traces:' + '\n';
              for(let i=0; i<data.Entry.length; i++){
                if(data.Entry[i].type == 1){
                  traces += data.Entry[i].Datetime + ': ' + data.Entry[i].residence + '. ' + data.Entry[i].placesPassed + '\n';
                }
              }
              alert(traces);
            }
            else {
              alert("No traces records found.")
            }
          }

          
        </script>
        
    </body>
</html>